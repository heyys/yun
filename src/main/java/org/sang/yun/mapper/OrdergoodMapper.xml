<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sang.yun.mapper.OrdergoodMapper" >
  <resultMap id="BaseResultMap" type="org.sang.yun.pojo.Ordergood" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="clId" property="clId" jdbcType="INTEGER" />
    <result column="cl_type" property="cl_type" jdbcType="INTEGER" />
    <result column="orderPrice" property="orderPrice" jdbcType="DOUBLE" />
    <result column="receivedPrice" property="receivedPrice" jdbcType="DOUBLE" />
    <result column="billId" property="billId" jdbcType="INTEGER" />
    <result column="fiId" property="fiId" jdbcType="INTEGER" />
    <result column="saleId" property="saleId" jdbcType="INTEGER" />
    <result column="orRemark" property="orRemark" jdbcType="VARCHAR" />
    <result column="plId" property="plId" jdbcType="INTEGER" />
    <result column="commitTime" property="commitTime" jdbcType="DATE" />
    <result column="finishTime" property="finishTime" jdbcType="DATE" />
    <result column="deliverTime" property="deliverTime" jdbcType="DATE" />
    <result column="cancelTime" property="cancelTime" jdbcType="DATE" />
    <result column="proId" property="proId" jdbcType="INTEGER" />
    <result column="stId" property="stId" jdbcType="INTEGER" />
    <result column="arealId" property="arealId" jdbcType="INTEGER" />
    <result column="waId" property="waId" jdbcType="INTEGER" />
    <result column="prepareName" property="prepareName" jdbcType="VARCHAR" />
    <result column="emId" property="emId" jdbcType="INTEGER" />
    <result column="distId" property="distId" jdbcType="INTEGER" />
    <result column="returnTime" property="returnTime" jdbcType="DATE" />
    <result column="printCount" property="printCount" jdbcType="INTEGER" />
    <result column="orStatus" property="orStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, clId, cl_type, orderPrice, receivedPrice, billId, fiId, saleId, orRemark, plId, 
    commitTime, finishTime, deliverTime, cancelTime, proId, stId, arealId, waId, prepareName, 
    emId, distId, returnTime, printCount, orStatus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.sang.yun.pojo.OrdergoodExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ordergood
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ordergood
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ordergood
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.sang.yun.pojo.Ordergood" useGeneratedKeys="true" keyProperty="id" >
    insert into ordergood (clId, cl_type, orderPrice, 
      receivedPrice, billId, fiId, 
      saleId, orRemark, plId, 
      commitTime, finishTime, deliverTime, 
      cancelTime, proId, stId, 
      arealId, waId, prepareName, 
      emId, distId, returnTime, 
      printCount, orStatus)
    values (#{clId,jdbcType=INTEGER}, #{cl_type,jdbcType=INTEGER}, #{orderPrice,jdbcType=DOUBLE}, 
      #{receivedPrice,jdbcType=DOUBLE}, #{billId,jdbcType=INTEGER}, #{fiId,jdbcType=INTEGER}, 
      #{saleId,jdbcType=INTEGER}, #{orRemark,jdbcType=VARCHAR}, #{plId,jdbcType=INTEGER}, 
      #{commitTime,jdbcType=DATE}, #{finishTime,jdbcType=DATE}, #{deliverTime,jdbcType=DATE}, 
      #{cancelTime,jdbcType=DATE}, #{proId,jdbcType=INTEGER}, #{stId,jdbcType=INTEGER}, 
      #{arealId,jdbcType=INTEGER}, #{waId,jdbcType=INTEGER}, #{prepareName,jdbcType=VARCHAR}, 
      #{emId,jdbcType=INTEGER}, #{distId,jdbcType=INTEGER}, #{returnTime,jdbcType=DATE}, 
      #{printCount,jdbcType=INTEGER}, #{orStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.sang.yun.pojo.Ordergood" useGeneratedKeys="true" keyProperty="id" >
    insert into ordergood
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clId != null" >
        clId,
      </if>
      <if test="cl_type != null" >
        cl_type,
      </if>
      <if test="orderPrice != null" >
        orderPrice,
      </if>
      <if test="receivedPrice != null" >
        receivedPrice,
      </if>
      <if test="billId != null" >
        billId,
      </if>
      <if test="fiId != null" >
        fiId,
      </if>
      <if test="saleId != null" >
        saleId,
      </if>
      <if test="orRemark != null" >
        orRemark,
      </if>
      <if test="plId != null" >
        plId,
      </if>
      <if test="commitTime != null" >
        commitTime,
      </if>
      <if test="finishTime != null" >
        finishTime,
      </if>
      <if test="deliverTime != null" >
        deliverTime,
      </if>
      <if test="cancelTime != null" >
        cancelTime,
      </if>
      <if test="proId != null" >
        proId,
      </if>
      <if test="stId != null" >
        stId,
      </if>
      <if test="arealId != null" >
        arealId,
      </if>
      <if test="waId != null" >
        waId,
      </if>
      <if test="prepareName != null" >
        prepareName,
      </if>
      <if test="emId != null" >
        emId,
      </if>
      <if test="distId != null" >
        distId,
      </if>
      <if test="returnTime != null" >
        returnTime,
      </if>
      <if test="printCount != null" >
        printCount,
      </if>
      <if test="orStatus != null" >
        orStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clId != null" >
        #{clId,jdbcType=INTEGER},
      </if>
      <if test="cl_type != null" >
        #{cl_type,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivedPrice != null" >
        #{receivedPrice,jdbcType=DOUBLE},
      </if>
      <if test="billId != null" >
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="fiId != null" >
        #{fiId,jdbcType=INTEGER},
      </if>
      <if test="saleId != null" >
        #{saleId,jdbcType=INTEGER},
      </if>
      <if test="orRemark != null" >
        #{orRemark,jdbcType=VARCHAR},
      </if>
      <if test="plId != null" >
        #{plId,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null" >
        #{commitTime,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=DATE},
      </if>
      <if test="deliverTime != null" >
        #{deliverTime,jdbcType=DATE},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=DATE},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="stId != null" >
        #{stId,jdbcType=INTEGER},
      </if>
      <if test="arealId != null" >
        #{arealId,jdbcType=INTEGER},
      </if>
      <if test="waId != null" >
        #{waId,jdbcType=INTEGER},
      </if>
      <if test="prepareName != null" >
        #{prepareName,jdbcType=VARCHAR},
      </if>
      <if test="emId != null" >
        #{emId,jdbcType=INTEGER},
      </if>
      <if test="distId != null" >
        #{distId,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=DATE},
      </if>
      <if test="printCount != null" >
        #{printCount,jdbcType=INTEGER},
      </if>
      <if test="orStatus != null" >
        #{orStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.sang.yun.pojo.Ordergood" >
    update ordergood
    <set >
      <if test="clId != null" >
        clId = #{clId,jdbcType=INTEGER},
      </if>
      <if test="cl_type != null" >
        cl_type = #{cl_type,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        orderPrice = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivedPrice != null" >
        receivedPrice = #{receivedPrice,jdbcType=DOUBLE},
      </if>
      <if test="billId != null" >
        billId = #{billId,jdbcType=INTEGER},
      </if>
      <if test="fiId != null" >
        fiId = #{fiId,jdbcType=INTEGER},
      </if>
      <if test="saleId != null" >
        saleId = #{saleId,jdbcType=INTEGER},
      </if>
      <if test="orRemark != null" >
        orRemark = #{orRemark,jdbcType=VARCHAR},
      </if>
      <if test="plId != null" >
        plId = #{plId,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null" >
        commitTime = #{commitTime,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        finishTime = #{finishTime,jdbcType=DATE},
      </if>
      <if test="deliverTime != null" >
        deliverTime = #{deliverTime,jdbcType=DATE},
      </if>
      <if test="cancelTime != null" >
        cancelTime = #{cancelTime,jdbcType=DATE},
      </if>
      <if test="proId != null" >
        proId = #{proId,jdbcType=INTEGER},
      </if>
      <if test="stId != null" >
        stId = #{stId,jdbcType=INTEGER},
      </if>
      <if test="arealId != null" >
        arealId = #{arealId,jdbcType=INTEGER},
      </if>
      <if test="waId != null" >
        waId = #{waId,jdbcType=INTEGER},
      </if>
      <if test="prepareName != null" >
        prepareName = #{prepareName,jdbcType=VARCHAR},
      </if>
      <if test="emId != null" >
        emId = #{emId,jdbcType=INTEGER},
      </if>
      <if test="distId != null" >
        distId = #{distId,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null" >
        returnTime = #{returnTime,jdbcType=DATE},
      </if>
      <if test="printCount != null" >
        printCount = #{printCount,jdbcType=INTEGER},
      </if>
      <if test="orStatus != null" >
        orStatus = #{orStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sang.yun.pojo.Ordergood" >
    update ordergood
    set clId = #{clId,jdbcType=INTEGER},
      cl_type = #{cl_type,jdbcType=INTEGER},
      orderPrice = #{orderPrice,jdbcType=DOUBLE},
      receivedPrice = #{receivedPrice,jdbcType=DOUBLE},
      billId = #{billId,jdbcType=INTEGER},
      fiId = #{fiId,jdbcType=INTEGER},
      saleId = #{saleId,jdbcType=INTEGER},
      orRemark = #{orRemark,jdbcType=VARCHAR},
      plId = #{plId,jdbcType=INTEGER},
      commitTime = #{commitTime,jdbcType=DATE},
      finishTime = #{finishTime,jdbcType=DATE},
      deliverTime = #{deliverTime,jdbcType=DATE},
      cancelTime = #{cancelTime,jdbcType=DATE},
      proId = #{proId,jdbcType=INTEGER},
      stId = #{stId,jdbcType=INTEGER},
      arealId = #{arealId,jdbcType=INTEGER},
      waId = #{waId,jdbcType=INTEGER},
      prepareName = #{prepareName,jdbcType=VARCHAR},
      emId = #{emId,jdbcType=INTEGER},
      distId = #{distId,jdbcType=INTEGER},
      returnTime = #{returnTime,jdbcType=DATE},
      printCount = #{printCount,jdbcType=INTEGER},
      orStatus = #{orStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>